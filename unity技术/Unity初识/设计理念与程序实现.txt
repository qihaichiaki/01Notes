游戏画面：
	颜色饱和度：尽量考虑使用饱和度适中的颜色。（RGB值在0.9之内）-柔和一些，不会那么刺眼。
	亮度：不让亮度达到极值。
	色相：三原色拥有各自的亮度（红色约为0.21，绿色0.72，蓝色0.07）
		-背景和内容的亮度差异一定不能太低-否则看着很模糊、不清楚、不舒服
	字体：
		标题大（粗），少量显示。正文小（细），大量展示
		避免一些默认和部分人群感到不适的字体。
	层次关系：
		场景和UI设计中，突出层次关系是需要考虑到的一点。
		可以考虑加入背景色块、小图标、阴影等元素突出物体之间的关系。
游戏设计：
	玩法机制与难度。
	
	-设计的最终目标？
		要有玩家、如何留住玩家。
	--初学者误区：
		1.误以为玩游戏的都是"玩家"
			（不可轻视游戏引导与游戏教程在游戏的重要性）
		2.认为玩家很聪明
			认知偏差。从最笨的角度去设置一些机制。（比如游戏机制、解密，任务等...）
		3.这游戏太简单了!
			不妨先往简单的设计。-难度动态调整

	正负反馈，游戏循环。
		我们玩游戏的一大原因：得到一些反馈。--剧情、玩法、思考等
		细节到每个游戏机制。
		正反馈：奖励...
		负反馈：死亡...

		正反馈：缩短游戏时长。
		负反馈：延长游戏寿命。
		需要对其进行平衡，不平衡，玩家的兴趣也就会消失。	机制之间的理由需要想清楚
游戏开发：
	需求的程序实现思路与难度。
	-根据自己程序的掌握量。看到一个需求，能很快想到一个思路，那么说明此实现容易的。
	-具体根据个人经验：
		1.之前有类似的需求吗？思考当时思路是什么，怎么修改。
		2.没有实现过，确定信息/数据是哪些
		3.确定好数据后，确定获取这些数据的方法。
		4.获取到数据后如何使用并且实现。
		5.实现了一个需求，优化（性能/画面上）我们的解决方案。
		6.完成！
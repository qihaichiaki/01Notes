动画：物体的属性随时间而变化的行为。
线性动画
	物理属性变化的速率是恒定的。	
非线性动画
	物体属性变化不是恒定的。（更贴合实际-自然）
	所有非一次函数都可以制作非线性动画。
		Mathf.Lerp(先快后慢的效果)

Unity动画编辑器的曲线：
	unity默认的动画曲线不是线性的。（两帧之间过度是个曲线，不是直线）
	调整Curves对应动画曲线切线即可。

动画曲线：
	一个标准的动画曲线本质上是一个[0, 1]映射到[0, 1]的函数，对应每一个0-1的x值可以采样到对应的y值（不是一个全射，取到的y值不一定要覆盖整个[0, 1]）
	线性动画曲线就是熟知的y=kx或者定值函数y=k。


Animation Curve类
Unity提供了这样的类，允许我们在编辑器/代码中创建动画曲线并对其进行采样。（公开后可在编辑器像动画曲线那样编辑）

	重要方法：
	1.animationCurve.Evaluate(float time) x = time处采样动画曲线返回对应的y值。
	2. ...AddKey(KeyFrame key) 向动画曲线中添加关键帧。
	3...RemoveKey(int index) 移除动画曲线的第index个关键帧。


动画事件-
	帮我们做到动画和逻辑同步的需求。（比如攻击动画打击到敌人-音效和伤害效果等）
	一般事件函数只接受0个或者1个参数。（多个参数可以使用unity提供的AnimationEvent，存在4个参数（float、int、string、Object））（注意一个参数只支持AnimationEvent类）
	函数不可为static。




-程序化动画-Tweening-
	Tweening - In-Betweening的简写，处理两帧之间的平滑过渡。动画曲线是实现Tweening最直观的一种方式。
	目标：编写一个函数，调用一次就可以对一个物体执行一次动画效果。
	比较常见的动画曲线：
	一次曲线：y=x
	二次曲线（单端）：y = 1-(1- x)^2 先快后慢
	三次曲线（单端）：y = 1- (1-x)^3 
	四次曲线（单端）：y = 1-(1-x)^4
	
	二次曲线（双端）：先慢后快再慢的曲线
		y = {2x^2 x < 0.5
	     	       /2x(2- x) - 1, x >= 0.5
	三次曲线（双端）：
		y = {4x^3 x < 0.5
	     	       /-4(1- x)^3 + 1, x >= 0.5
	四次曲线（双端）：
		y = {8x^4 x < 0.5
	     	       /-8(1- x)^4 + 1, x >= 0.5
	五次曲线（双端）：
		y = {16x^5 x < 0.5
	     	       /-16(1- x)^5 + 1, x >= 0.5

	次方越高-对比度更高。（视觉冲击）
	幂曲线（单端）：(一开始很缓慢，后面非常剧烈)
		y = 2^10*(x-1)
	幂曲线（双端）：（开始和结束都很缓慢，中间非常剧烈）
		y = {0.5*2^(20(x-10)), x < 0.5
		      /0.5*(2 - 2^(-20x + 10)). x >= 0.5
	弹性曲线（单端）：
		y = -2^(-10+10x)*sin(2Π*(3.33x-3.58))
	

	根式曲线（单端）：（比2次还要平滑一点的） 先慢，后速率越来越高
		y = 1- √(1-x^2)
	
	根式曲线（双端）：先慢，后快，逐渐慢下来
		y ={ 0.5 * (1 - √(1-4x^2)), x < 0.5
		    / 0.5 * (√(1-(2x-2)^2) + 1), x >= 0.5
	返回曲线（单端）：先反方向走，然后正向走（类似于先蓄力（后退一下），再冲刺）-弹簧
		y = x^2*(2.70158x - 1.70158)
	返回曲线（双端）：（先往后，再往前，超出目标点，然后再回到目标点）
		y = { x^2 * (14.379636x - 5.189818), x < 0.5
		      /(x - 1)^2*(14.379636(x - 1) + 5.189818)+,x>=0.5


	动画曲线采样器类：根据动画曲线接受x值返回对应的y值。public static float SampleCurve(Curve curve, float x)
	Curve类为标识是什么曲线（类型，存储func(float, float)函数） 

Tweening函数模板：
	public static void StartProcedure(Curve curve, float time, Action<float> action, Action<float> onFinish = null, string id = "")
	curve是一个动画曲线（曲线类别）、time是动画持续时间、action动画实际内容、onFinish动画结束时触发的事件、id是改动画的标识符。（用于停止动画等）
	使用协程实现此函数。
	再action中x值会逐渐的（线性的）从0变到1，action中的参数就是我们采样到的y值。

	对于Action传入的参数，还可以利用lamdb表达式()=>{} 实现上一个执行完然后执行下一个的功能。

练习：
	1.使用Tweening函数：https://www.bilibili.com/video/BV1Fu411G74v/?spm_id_from=333.880.my_history.page.click&vd_source=f28361126829017169715ae17844b2f6  1:17:01



	2.编写StopProcedure函数，用于停止一个已经开始Tweening动画。
	3.使用StartProcedure函数实现一定时间内一段文字逐个出现的效果（类似对话框）
	4.DoTween是一个强大的程序化动画插件，用其实现第一题的内容。



游戏内多用非线性动画。
	


		
	
	
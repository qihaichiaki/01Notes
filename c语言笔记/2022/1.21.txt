位运算
^按位异或运算符
即，将两个数转换为二进制进行比较，然后相同的转化为0，不同的转化为1。
&两个位都是1结果为1，| 两个位都为0才为0
~ 取反0-1  1-0
＜＜左移几位，右补0
＞＞右移几位，左补0||1（看正负）5

数组
一组相同类型元素的集合
数据类型 数组名 [常量表达式]

c99中引入了变长数组的概念（允许数组的大小用变量来指定）如果不是就不支持c99。
vs2019不支持变长数组的。但是变长数组不能
-初始化
const int a，这个a还是变量，只不过是常变量
（c语言里）

创建的同时就给值（初始化）
初始化时可以不写大小，这个时候以数组里面的个数为准
没有初始化存的是随机值（所有的局部变量均是）

内存区
栈                         堆                       静态区
局部，形式                                    全局，静态变量
默认随机值                                     默认0

注意字符数组未完全初始化默认放\0

后面数组的循环里 可以用sizeof计算数组长度（数组内存/数组单个元素内存）

%p打印地址（打印十六进制）%d（打印十进制）

一个整型元素占四个字节（内存里面的单位就是一个字节），所以在int类型的数组里面相邻两个地址也是差四的，由此得到一维数组在内存中是连续存放的，随着数组下标的增长，地址是由低到高增长的。

*注意，指针类型对应是谁，指针变量加一，这个一就是这个类型的一个单位（int为4，char为1）即整型跳一个整型，字符跳一个字符。

二维数组里面计算行（sizeof（arr）/sizeof (arr[0]),列sizeof (arr [0])/sizeof (arr [0][0])
二维数组同样是连续储存的，每行的末尾和下一行的开头同样差的是一个数组类型的字节。
可以把二维数值的每行看做一个一维数组。

冒泡排序
数组中两个相邻的元素进行比较，如果不满足顺序就交换（可优化设计）

*注意传数组地址若传数组名时仅仅只传了首元素地址（给形参）
sizeof（数组名）计算的是整个数组的大小
&数组名取出整个数组的地址（整个数组的地址也是从首元素开始），与数组名的区别就是加一一个是跳过一个类型的字节，一个是跳过了整个数组的字节。&a+1和a+1（a是数组名）

三子棋
test.c    游戏模块测试
game.c 游戏实现模块
game.h 函数声明，字符定义，头文件声明
-------------------------------------------多人协作一
基本完成Git所有本地库的相关擦做，git基本操作，分支操作，版本回退，解决冲突等。

现在主要是熟悉多人场景下的Git的多人协作开发。
****************************************************************
目标：远端master分支下file.txt 文件新增代码 "aaa"、"bbb" 
实现：开发者1新增"aaa"，开发者2新增"bbb"
条件：在一个分支下协作完成-不是master分支。
****************************************************************

创建分支可以选择在远程仓库中创建或者在本地仓库中进行创建。
码云平台上：master->管理->新建分支：常规分支。

查看远程仓库的分支：git branch -r

拉取远程仓库的分支：git pull origin master/dev...
	其实可以直接git pull 就可以直接拉取远程仓库下的所有内容。

实际上本地是存在 本地分支和远程分支。
本地的所有操作只能操作本地的，远程需要push
查看远程和本地同时的分支：
	git branch -a


------------------push、pull之前都是针对分支的操作。
之前，分支之间需要建立连接，才能push
git push origin master:master    -
实际上此命令是不需要建立远程连接的。
而简写的时候：git push 的时候，是需要建立连接了。
clon的时候是建立好了。
pull同理。



开发者1：
	新增"aaa"
	创建本地分支dev
		git checkout -b dev origin/dev
		后面跟随的是追踪的就是远程的origin/dev分支，也就是建立了连接 - 此时直接push/pull就是对应的操作。
		git branch -vv 可以查看建立连接的效果。
	
	对file新加aaa
	add . commit -m git push 上传即可
	


开发者2；
	新增"bbb"
	创建本地dev分支并且切换
		git checkout -b dev [origin/<branch>]
		git branch -vv 查看是否进行连接。

	此时没有建立连接，git pull 就会报错，因为当前分支没有进行连接。
	对当前分支与远程分支进行连接的话：
*********		git branch --set-upstream-to=origin/dev dev 就可以进行连接
		此时git pull 即可
	对file新加"bbb"
	add、commit、git push
		会发现报错：因为此时远程仓库dev分支下，开发者1以及push修改了，此时相当于两个分支合并发生了冲突。（即两个分支均存在一次提交，此时需要判决）
		此时先进行git pull，进行冲突的解决，解决完毕add、commit后进行push即可。



----将远程仓库下的dev分支合并到master分支下。均为远程仓库

1.本地master分支merge dev，然后push
本地：master merge dev -push> 远程：origin/master
可以现在dev merge master：如果存在冲突，就在dev上进行解决，冲突解决后在切换到master上，此时就不会受什么影响了。
dev merge master 的状态 需要保证master、dev都是最新的状态。
-1master、dev进行pull操作。
-2dev上merge master分支
-3master上进行merge dev，然后push




2.提交PR合并申请单，管理员审批单子，同意，就可以远程仓库自动merge。
新建一个pull request，提交，管理员同意即可。
此方法需要通过审查员审核的：老板、项目经理... 对代码是存在保障性的。

注意事项：
	pr可能会出现冲突，此时不可直接在master解决。
	所以此时需要对应要合并的时候，先在本地合并master分支，pr表单提交的时候不应该出现任何冲突的。



最后对dev分支进行删除操作。
远程仓库对分支进行删除 




需要注意，解决冲突是非常麻烦的事情。
所以在同一分支上进行多人协作是非常麻烦的。pull ... 

-------------------------------------------多人协作二

****************************************************************
目标：远端master分支下新增function1和function2文件
实现：开发者1新增1，开发者2新增2
条件：在不同分支下协作完成：各自私有一个分支（适用于各自让某一个功能私有某一个分支）
****************************************************************

			开发者1：master、origin/master
远程仓库			feature-1（feature：功能）....
master	
			开发者2：master、origin/master
			feature-2 ....

开发者1：
git checkout -b feature-1
touch function1
echo "..." >> function1
add.
commit -m
git push origin feature-1:feature-1(本地:远程)
	提交并且为远程仓库也创建了此分支。

开发者2：
git checkout -b feature-2
touch function2
echo "..." >> function2
add.
commit -m
git push origin feature-2:feature-2(本地:远程)
	提交并且为远程仓库也创建了此分支。



注意，此时没有解决任何的冲突。
也就是push过程中不会出现任何冲突，这在单分支下是不行的。

*****************************************
现在开发者1需要帮助开发者2继续开发：
（转换为同一分支了）
*****************************************

开发者1：
git pull 是可以拉取远程仓库的分支的。
修改，上传、push即可


开发者2：
此时需要pull获取最新的内容。
修改，上传，push即可


---此时需要将两个分支合并到master分支下










----------------------------总结
分支的创建：
1.远程创建分支 -> pull
	推荐1 因为此时创建的分支是最全最新的master（远程仓库）

2.本地创建分支 -> push
	不推荐：本地仓库下master不一定是最新的。




git pull 命令：
1.拉取分支内的内容 需要建立连接 -分支与分支
2.拉取仓库的内容。（此时和分支没有关系，不需要建立连接）



有点时候远程分支删除后，本地git branch -a依然可以看到分支的解决办法：
git remote show origin 展示远程分支状态
git remote prune origin 就可以对陈旧的分支进行修改。





